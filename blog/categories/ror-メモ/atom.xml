<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RoR メモ | Memos]]></title>
  <link href="http://akiko74.github.com/blog/categories/ror-メモ/atom.xml" rel="self"/>
  <link href="http://akiko74.github.com/"/>
  <updated>2013-10-06T14:24:19+09:00</updated>
  <id>http://akiko74.github.com/</id>
  <author>
    <name><![CDATA[Akiko Saito]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DeviseでNested Formを作る]]></title>
    <link href="http://akiko74.github.com/blog/2013/03/07/making-nested-forms-with-devise/"/>
    <updated>2013-03-07T08:28:00+09:00</updated>
    <id>http://akiko74.github.com/blog/2013/03/07/making-nested-forms-with-devise</id>
    <content type="html"><![CDATA[<p>Deviseを利用してユーザ登録フォームなどを作るとき子要素を一緒に登録させられるようにする方法。</p>

<p>例として、UserモデルにCharacterという子テーブルがあり、UserをDeviseで登録するときにcharactersも一緒に登録したいというケースを考えます。</p>

<p>まずはUserモデルへの追記。</p>

<p><div><script src='https://gist.github.com/5105404.js?file=user.rb'></script>
<noscript><pre><code>class User &lt; ActiveRecord::Base
  # Include default devise modules. Others available are:
  # :token_authenticatable, :confirmable,
  # :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable
 
  # Setup accessible (or protected) attributes for your model
  attr_accessible :email, :password, :password_confirmation, :remember_me, :characters_attributes
  # attr_accessible :title, :body
 
  has_many :characters
 
  accepts_nested_attributes_for :characters
 
  def with_character
    Array.new(5) {self.characters.build}
    self
  end
end</code></pre></noscript></div>
</p>

<p>attr_accessible に子モデルを追加します。characters_attributes という書き方で子要素全てへのアクセスを許可。</p>

<!-- more -->

<p>次に、accepts_nested_attributes_for　に子モデルを追加します。</p>

<p>そして、Viewの中に追加する field_for のために、modelに子モデルのinstanceを作成します。</p>

<p>def with_character
  self.characters.build
  self
end</p>

<p>複数個登録する場合は、Array.new(5) {self.characters.build} のような感じで配列で渡しておきます。</p>

<p>次にViewのほう。</p>

<p><div><script src='https://gist.github.com/5105404.js?file=new.html.erb'></script>
<noscript><pre><code>&lt;h2&gt;Registration&lt;/h2&gt;
 
&lt;%= form_for([resource, resource.with_character], :as =&gt; resource_name, :url =&gt; registration_path(resource_name)) do |f| %&gt;
  &lt;%= devise_error_messages! %&gt;
 
  &lt;div&gt;&lt;%= f.label :email %&gt;&lt;br /&gt;
  &lt;%= f.email_field :email, :autofocus =&gt; true %&gt;&lt;/div&gt;
 
  &lt;div&gt;&lt;%= f.label :password %&gt;&lt;br /&gt;
  &lt;%= f.password_field :password %&gt;&lt;/div&gt;
 
  &lt;div&gt;&lt;%= f.label :password_confirmation %&gt;&lt;br /&gt;
  &lt;%= f.password_field :password_confirmation %&gt;&lt;/div&gt;
 
  &lt;div&gt;&lt;%= f.fields_for :characters do |character_form| %&gt;
    &lt;%= character_form.label :char_name %&gt;
    &lt;%= character_form.text_field :char_name %&gt;
    &lt;% end %&gt;
  &lt;/div&gt;
 
  &lt;div&gt;&lt;%= f.submit &quot;Sign up&quot; %&gt;&lt;/div&gt;
&lt;% end %&gt;
 
&lt;%= render &quot;devise/shared/links&quot; %&gt;</code></pre></noscript></div>
</p>

<p>いつもNested_formsの書き方が分からなくなりますが、まずform_forのところを[配列]で定義します。
user.rbの中でdef with_character と定義していたので、userと、userの子モデルであるcharactersのインスタンスを配列に入れます。</p>

<p>子要素はf.fields_forで入れられるので、モデル名を渡し(:characters)カラムを作成します。</p>

<p>これで、子要素まで含めて一括登録が出来るはず。
DeviseのErrorでもう一度new.html.erbが呼ばれると、子要素の配列が増えるのですが、それを解消する方法は模索中…</p>
]]></content>
  </entry>
  
</feed>
